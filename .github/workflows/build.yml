name: "Build and populate cache"
on:
  pull_request:
  push:
    branches:
      - main
      - master
  schedule:
    - cron: "11 4 * * *"
jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        cachixName:
          - weiss
        nixPath:
          - nixpkgs=channel:nixos-unstable
          - nixpkgs=channel:nixpkgs-unstable
          - nixpkgs=channel:nixos-24.11
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v25
        with:
          nix_path: "${{ matrix.nixPath }}"
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - name: Show nixpkgs version
        run: nix-instantiate --eval -E '(import <nixpkgs> {}).lib.version'
      - name: Setup cachix
        uses: cachix/cachix-action@v14
        # Don't replace <YOUR_CACHIX_NAME> here!
        if: ${{ matrix.cachixName != '<YOUR_CACHIX_NAME>' }}
        with:
          name: ${{ matrix.cachixName }}
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - uses: DeterminateSystems/magic-nix-cache-action@v2
      - name: Check evaluation
        run: |
          nix-env -f . -qa \* --meta --xml \
            --allowed-uris https://static.rust-lang.org \
            --option restrict-eval true \
            --option allow-import-from-derivation true \
            --drv-path --show-trace \
            -I nixpkgs=$(nix-instantiate --find-file nixpkgs) \
            -I $PWD
      - name: Build nix packages
        run: nix shell -f '<nixpkgs>' nix-build-uncached -c nix-build-uncached ci.nix -A cacheOutputs
